# Stubs for cryptography.hazmat.backends.openssl.dsa (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class _DSAVerificationContext:
    def __init__(self, backend: Any, public_key: Any, signature: Any, algorithm: Any) -> None: ...
    def update(self, data: Any) -> None: ...
    def verify(self) -> None: ...

class _DSASignatureContext:
    def __init__(self, backend: Any, private_key: Any, algorithm: Any) -> None: ...
    def update(self, data: Any) -> None: ...
    def finalize(self): ...

class _DSAParameters:
    def __init__(self, backend: Any, dsa_cdata: Any) -> None: ...
    def parameter_numbers(self): ...
    def generate_private_key(self): ...

class _DSAPrivateKey:
    def __init__(self, backend: Any, dsa_cdata: Any, evp_pkey: Any) -> None: ...
    key_size: Any = ...
    def signer(self, signature_algorithm: Any): ...
    def private_numbers(self): ...
    def public_key(self): ...
    def parameters(self): ...
    def private_bytes(self, encoding: Any, format: Any, encryption_algorithm: Any): ...
    def sign(self, data: Any, algorithm: Any): ...

class _DSAPublicKey:
    def __init__(self, backend: Any, dsa_cdata: Any, evp_pkey: Any) -> None: ...
    key_size: Any = ...
    def verifier(self, signature: Any, signature_algorithm: Any): ...
    def public_numbers(self): ...
    def parameters(self): ...
    def public_bytes(self, encoding: Any, format: Any): ...
    def verify(self, signature: Any, data: Any, algorithm: Any): ...
