# Stubs for cryptography.hazmat.primitives.ciphers.base (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class CipherAlgorithm:
    def name(self) -> None: ...
    def key_size(self) -> None: ...

class BlockCipherAlgorithm:
    def block_size(self) -> None: ...

class CipherContext:
    def update(self, data: Any) -> None: ...
    def update_into(self, data: Any, buf: Any) -> None: ...
    def finalize(self) -> None: ...

class AEADCipherContext:
    def authenticate_additional_data(self, data: Any) -> None: ...

class AEADDecryptionContext:
    def finalize_with_tag(self, tag: Any) -> None: ...

class AEADEncryptionContext:
    def tag(self) -> None: ...

class Cipher:
    algorithm: Any = ...
    mode: Any = ...
    def __init__(self, algorithm: Any, mode: Any, backend: Any) -> None: ...
    def encryptor(self): ...
    def decryptor(self): ...

class _CipherContext:
    def __init__(self, ctx: Any) -> None: ...
    def update(self, data: Any): ...
    def update_into(self, data: Any, buf: Any): ...
    def finalize(self): ...

class _AEADCipherContext:
    def __init__(self, ctx: Any) -> None: ...
    def update(self, data: Any): ...
    def update_into(self, data: Any, buf: Any): ...
    def finalize(self): ...
    def finalize_with_tag(self, tag: Any): ...
    def authenticate_additional_data(self, data: Any) -> None: ...

class _AEADEncryptionContext(_AEADCipherContext):
    @property
    def tag(self): ...
