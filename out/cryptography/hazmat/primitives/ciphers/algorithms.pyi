# Stubs for cryptography.hazmat.primitives.ciphers.algorithms (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class AES:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class Camellia:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class TripleDES:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class Blowfish:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class CAST5:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class ARC4:
    name: str = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class IDEA:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class SEED:
    name: str = ...
    block_size: int = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any) -> None: ...
    @property
    def key_size(self): ...

class ChaCha20:
    name: str = ...
    key_sizes: Any = ...
    key: Any = ...
    def __init__(self, key: Any, nonce: Any) -> None: ...
    nonce: Any = ...
    @property
    def key_size(self): ...
