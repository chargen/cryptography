# Stubs for cryptography.hazmat.primitives.ciphers.modes (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class Mode:
    def name(self) -> None: ...
    def validate_for_algorithm(self, algorithm: Any) -> None: ...

class ModeWithInitializationVector:
    def initialization_vector(self) -> None: ...

class ModeWithTweak:
    def tweak(self) -> None: ...

class ModeWithNonce:
    def nonce(self) -> None: ...

class ModeWithAuthenticationTag:
    def tag(self) -> None: ...

class CBC:
    name: str = ...
    def __init__(self, initialization_vector: Any) -> None: ...
    initialization_vector: Any = ...
    validate_for_algorithm: Any = ...

class XTS:
    name: str = ...
    def __init__(self, tweak: Any) -> None: ...
    tweak: Any = ...
    def validate_for_algorithm(self, algorithm: Any) -> None: ...

class ECB:
    name: str = ...
    validate_for_algorithm: Any = ...

class OFB:
    name: str = ...
    def __init__(self, initialization_vector: Any) -> None: ...
    initialization_vector: Any = ...
    validate_for_algorithm: Any = ...

class CFB:
    name: str = ...
    def __init__(self, initialization_vector: Any) -> None: ...
    initialization_vector: Any = ...
    validate_for_algorithm: Any = ...

class CFB8:
    name: str = ...
    def __init__(self, initialization_vector: Any) -> None: ...
    initialization_vector: Any = ...
    validate_for_algorithm: Any = ...

class CTR:
    name: str = ...
    def __init__(self, nonce: Any) -> None: ...
    nonce: Any = ...
    def validate_for_algorithm(self, algorithm: Any) -> None: ...

class GCM:
    _MAX_ENCRYPTED_BYTES: int = ...
    _MAX_AAD_BYTES: int = ...
    name: str = ...
    def __init__(self, initialization_vector: Any, tag: Optional[Any] = ..., min_tag_length: int = ...) -> None: ...
    tag: Any = ...
    initialization_vector: Any = ...
    def validate_for_algorithm(self, algorithm: Any) -> None: ...
